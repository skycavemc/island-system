plugins {
    id 'java'
}

group 'de.leonheuer.skycave'
version '2.0.0'

repositories {
    mavenCentral()
    maven { url 'https://maven.enginehub.org/repo/' }
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.onarandombox.com/content/groups/public/' }
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.7-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.6-SNAPSHOT'
    compileOnly 'com.googlecode.json-simple:json-simple:1.1.1'
    compileOnly 'io.papermc.paper:paper-api:1.18.1-R0.1-SNAPSHOT'
    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.1'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    implementation 'com.github.heuerleon:mcguiapi:v1.3.3'
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
def encoding = 'UTF-8'

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
    compileJava.options.encoding = encoding
    compileTestJava.options.encoding = encoding
    javadoc.options.encoding = encoding
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}